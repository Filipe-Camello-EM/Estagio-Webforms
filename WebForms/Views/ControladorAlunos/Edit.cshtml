@using Domain

@model Domain.Aluno

<head>
    <script src="https://code.jquery.com/jquery-2.2.4.js" integrity="sha256-iT6Q9iMJYuQiMWNd9lDyBUStIq/8PuOW33aOqmvFpqI=" crossorigin="anonymous"></script>
</head>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-row">
        <h4>Atualizar Aluno</h4>
        <hr/>
        <div>
            @Html.ActionLink("Voltar para a Lista", "", null, null, new { @class="btn btn-secondary" } )
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Matricula)
        
<div class="row">
    <div class="col-xl-6">
        <div class="form-group">
            @Html.LabelFor(model => model.Matricula, htmlAttributes: new { @class = "control-label"})
                @Html.EditorFor(model => model.Matricula, new { htmlAttributes = new { @class = "form-control", @readonly="readonly"}})
                @Html.ValidationMessageFor(model => model.Matricula, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-xl-6">
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xl-6">
        <div class="form-group">
            @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control"}})
                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-xl-6">
        <div class="form-group">
            @Html.LabelFor(model => model.Nascimento, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Nascimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nascimento, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
        <p>
<div class="row">
    <div class="col-xl-4">
        <div class="form-group">
            @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.Sexo, new SelectList (Enum.GetValues(typeof(EnumeradorSexo))), htmlAttributes: new { @class = "form-select" })
                @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
        </p>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Editar" class="btn btn-success" />
                <input type="reset" value="Resetar Valores" class="btn btn-danger" />
            </div>
        </div>
    </div>
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.maskedinput.min.js"></script>

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.0/jquery.mask.js"></script>
<script>
    $(document).ready(function () { 
        var $seuCampoCpf = $("#CPF");
        $seuCampoCpf.mask('000.000.000-00', {reverse: true});
    });
</script>
